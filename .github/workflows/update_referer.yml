name: Daily Referer & Origin Updater (Browser Emulation v2)

on:
  schedule:
    - cron: '30 5 * * *'
  workflow_dispatch:

jobs:
  update-referer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Fetch new Referer using a headless browser
        id: fetch_referer # Δίνουμε ID στο βήμα για να πάρουμε το output
        run: |
          SOURCE_PAGE_URL="https://miztv.top/stream/stream-622.php"
          echo "Installing Puppeteer..."
          npm i puppeteer
          
          echo "Launching browser to fetch dynamic content from $SOURCE_PAGE_URL"

          # Βελτιωμένο Node.js script
          # Χρησιμοποιεί page.evaluate για να πάρει το περιεχόμενο, το οποίο είναι πιο αξιόπιστο.
          # Αγνοεί τα σφάλματα timeout και απλά παίρνει ό,τι έχει φορτώσει.
          NEW_REFERER_URL=$(node -e "
            const puppeteer = require('puppeteer');
            (async () => {
              const browser = await puppeteer.launch({ args: ['--no-sandbox', '--disable-setuid-sandbox'] });
              const page = await browser.newPage();
              try {
                // Πάμε στη σελίδα αλλά δεν περιμένουμε να ολοκληρωθεί πλήρως αν αργεί πολύ.
                await page.goto('${SOURCE_PAGE_URL}', { timeout: 30000 });
              } catch (e) {
                console.warn('Page navigation timed out, but proceeding anyway. This is often okay.');
              }
              
              // Περιμένουμε για το iframe, που είναι το κλειδί.
              await page.waitForSelector('iframe', { timeout: 15000 });
              const iframeSrc = await page.evaluate(() => {
                const iframe = document.querySelector('iframe');
                return iframe ? iframe.src : null;
              });

              if (iframeSrc) {
                const match = iframeSrc.match(/Referer=([^&]+)/);
                if (match && match[1]) {
                  console.log(match[1]); // Τυπώνουμε το αποτέλεσμα για να το πιάσει η bash
                } else {
                  console.error('Iframe found, but Referer pattern did not match.');
                }
              } else {
                console.error('Could not find the iframe on the page.');
              }

              await browser.close();
            })();
          ")

          if [ -z "\$NEW_REFERER_URL" ]; then
            echo "::error::Could not extract Referer URL from page."
            exit 1
          fi

          echo "Successfully found new Referer: \$NEW_REFERER_URL"
          # Ορίζουμε το output για το επόμενο βήμα
          echo "new_referer=\$NEW_REFERER_URL" >> \$GITHUB_OUTPUT

      - name: Update M3U8 file with new Referer
        # Χρησιμοποιούμε το output του προηγούμενου βήματος
        env:
          NEW_REFERER_URL: ${{ steps.fetch_referer.outputs.new_referer }}
        run: |
          TARGET_FILE="GreekSportsChannels.m3u8"
          
          if [ -z "\$NEW_REFERER_URL" ]; then
            echo "::error::New Referer URL is empty. Aborting update."
            exit 1
          fi

          echo "New Referer to use for update is: \$NEW_REFERER_URL"
          
          CURRENT_REFERER_URL=\$(grep -oP 'Referer=\\K[^&]+' "\$TARGET_FILE" | head -n 1)

          if [ -z "\$CURRENT_REFERER_URL" ]; then
            echo "::warning::No current Referer found. Appending to all links."
            sed -i -E "s|(dokko1new.newkso.ru/dokko1/premium[0-9]+/mono.m3u8)|\\1#Referer=\${NEW_REFERER_URL}\\&Origin=\${NEW_REFERER_URL}|g" "\$TARGET_FILE"
            exit 0
          fi

          if [ "\$NEW_REFERER_URL" == "\$CURRENT_REFERER_URL" ]; then
            echo "Referer is already up-to-date."
            exit 0
          fi

          echo "Updating all links in \$TARGET_FILE"
          sed -i "s|\$CURRENT_REFERER_URL|\$NEW_REFERER_URL|g" "\$TARGET_FILE"
          echo "File updated successfully."

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'ci: Automate update of Referer/Origin URL'
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'actions@github.com'
          commit_author: 'GitHub Actions Bot <actions@github.com>'
          file_pattern: 'GreekSportsChannels.m3u8'
